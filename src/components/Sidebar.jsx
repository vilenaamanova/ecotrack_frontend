import React, { useState } from "react";

import aqi1 from "../assets/aqi-1.png";
import aqi2 from "../assets/aqi-2.png";
import aqi3 from "../assets/aqi-3.png";
import aqi4 from "../assets/aqi-4.png";
import aqi5 from "../assets/aqi-5.png";

import clear from "../assets/clear.png";
import cloud from "../assets/cloud.png";
import humidity from "../assets/humidity.png";
import pressure from "../assets/pressure.png";
import rain from "../assets/rain.png";
import snow from "../assets/snow.png";
import thunderstorm from "../assets/thunderstorm.png";
import wind from "../assets/wind.png";

const getAQIStyles = (aqi) => {
  switch (aqi) {
    case 1:
      return { image: aqi1, color: "bg-green-100", verdict: "–•–æ—Ä–æ—à–æ" };
    case 2:
      return { image: aqi2, color: "bg-yellow-100", verdict: "–£–º–µ—Ä–µ–Ω–Ω–æ" };
    case 3:
      return { image: aqi3, color: "bg-orange-100", verdict: "–í—Ä–µ–¥–Ω–æ –¥–ª—è —É—è–∑–≤–∏–º—ã—Ö –≥—Ä—É–ø–ø" };
    case 4:
      return { image: aqi4, color: "bg-red-100", verdict: "–í—Ä–µ–¥–Ω–æ" };
    case 5:
      return { image: aqi5, color: "bg-purple-100", verdict: "–û–ø–∞—Å–Ω–æ" };
    default:
      return { image: null, color: "bg-gray-100", verdict: "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ" };
  }
};

const getWeatherImage = (precipitation) => {
  switch (precipitation) {
    case "Rain":
      return rain;
    case "Snow":
      return snow;
    case "Clouds":
      return cloud;
    case "Clear":
      return clear;
    case "Thunderstorm":
      return thunderstorm;
    default:
      return clear;
  }
};

const Sidebar = ({ city, weatherData, airQualityData }) => {
  const [isExpanded, setIsExpanded] = useState(false);

  if (!city || !weatherData || !airQualityData) {
    return (
      <aside className="fixed top-[96px] left-4 w-64 bg-white shadow-lg p-6 rounded-xl z-40 mb-8">
        <p className="text-red-500">–î–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã</p>
      </aside>
    );
  }

  const aqiStyles = getAQIStyles(airQualityData.aqi);

  const pollutants = [
    { name: "PM2.5", description: "–¢–≤–µ—Ä–¥—ã–µ —á–∞—Å—Ç–∏—Ü—ã –¥–∏–∞–º–µ—Ç—Ä–æ–º ‚â§2.5 –º–∫–º", value: airQualityData.pm2_5, standard: 25 },
    { name: "PM10", description: "–¢–≤–µ—Ä–¥—ã–µ —á–∞—Å—Ç–∏—Ü—ã –¥–∏–∞–º–µ—Ç—Ä–æ–º ‚â§10 –º–∫–º", value: airQualityData.pm10, standard: 50 },
    { name: "NO2", description: "–î–∏–æ–∫—Å–∏–¥ –∞–∑–æ—Ç–∞", value: airQualityData.no2, standard: 200 },
    { name: "SO2", description: "–î–∏–æ–∫—Å–∏–¥ —Å–µ—Ä—ã", value: airQualityData.so2, standard: 20 },
    { name: "CO", description: "–û–∫—Å–∏–¥ —É–≥–ª–µ—Ä–æ–¥–∞", value: airQualityData.co, standard: 10000 },
    { name: "O3", description: "–û–∑–æ–Ω", value: airQualityData.o3, standard: 120 },
  ];

  const recommendations = {
    1: "‚úÖ –ú–æ–∂–Ω–æ —Å–ø–æ–∫–æ–π–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –Ω–∞ —É–ª–∏—Ü–µ –∏ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –ª—é–±–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é.\
        ‚úÖ –ü—Ä–æ–≤–µ—Ç—Ä–∏–≤–∞–Ω–∏–µ –ø–æ–º–µ—â–µ–Ω–∏–π –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.",
    2: "‚ö† –ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –≥—Ä—É–ø–ø—ã (–¥–µ—Ç–∏, –ø–æ–∂–∏–ª—ã–µ –ª—é–¥–∏, –∞–ª–ª–µ—Ä–≥–∏–∫–∏) –º–æ–≥—É—Ç –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –ª–µ–≥–∫–∏–π –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç.\
        ‚úÖ –ú–æ–∂–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –Ω–∞ —É–ª–∏—Ü–µ, –Ω–æ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –∞–ª–ª–µ—Ä–≥–∏–∏ –∏–ª–∏ —Ö—Ä–æ–Ω–∏—á–µ—Å–∫–∏—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –ª—É—á—à–µ —Å–æ–∫—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è –ø—Ä–µ–±—ã–≤–∞–Ω–∏—è.",
    3: "‚ö† –õ—é–¥—è–º —Å –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è–º–∏ –¥—ã—Ö–∞—Ç–µ–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã, –¥–µ—Ç—è–º –∏ –ø–æ–∂–∏–ª—ã–º —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–æ–∫—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è –Ω–∞ —É–ª–∏—Ü–µ.\
        ‚úÖ –ó–∞–∫—Ä—ã–≤–∞–π—Ç–µ –æ–∫–Ω–∞ –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—á–∏—Å—Ç–∏—Ç–µ–ª–∏ –≤–æ–∑–¥—É—Ö–∞ –¥–æ–º–∞.\
        ‚úÖ –û–≥—Ä–∞–Ω–∏—á—å—Ç–µ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–µ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ —É–ª–∏—Ü–µ.",
    4: "‚ö† –í—Å–µ–º –∂–∏—Ç–µ–ª—è–º –ª—É—á—à–µ —Å–æ–∫—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è –ø—Ä–µ–±—ã–≤–∞–Ω–∏—è –Ω–∞ —É–ª–∏—Ü–µ.\
        ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–∞—Å–∫—É –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –Ω–∞ —É–ª–∏—Ü—É.\
        ‚úÖ –ú–∏–Ω–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –ø—Ä–æ–≤–µ—Ç—Ä–∏–≤–∞–Ω–∏–µ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—á–∏—Å—Ç–∏—Ç–µ–ª–∏ –≤–æ–∑–¥—É—Ö–∞.",
    5: "‚ö† –û—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å –¥–æ–º–∞, –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ.\
        ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ—Å–ø–∏—Ä–∞—Ç–æ—Ä—ã —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ (N95 –∏ –≤—ã—à–µ) –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –Ω–∞ —É–ª–∏—Ü—É.\
        ‚úÖ –í–∫–ª—é—á–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç–µ–ª–∏ –≤–æ–∑–¥—É—Ö–∞ –∏ —É–≤–ª–∞–∂–Ω–∏—Ç–µ–ª–∏ –¥–æ–º–∞.\
        üö´ –ò–∑–±–µ–≥–∞–π—Ç–µ –ª—é–±—ã—Ö —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –Ω–∞–≥—Ä—É–∑–æ–∫ –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–æ–º –≤–æ–∑–¥—É—Ö–µ."
  };

  return (
    <aside className="fixed top-[96px] left-4 w-96 bg-white shadow-lg p-6 rounded-xl z-40 mb-8 max-h-[calc(100vh-120px)] overflow-y-auto">
      <h2 className="text-xl font-bold mb-4">{city}</h2>

      <div className="border-t border-gray-200 mb-4"></div>

      <div className={`${aqiStyles.color} p-4 rounded-lg mb-4 flex items-center`}>
        <img src={aqiStyles.image} alt="AQI" className="w-12 h-12 mr-4" />
        <div className="flex-grow">
          <p className="text-lg font-semibold">AQI: {airQualityData.aqi}</p>
          <p className="text-sm text-gray-600">UK AQI</p>
        </div>
        <p className="text-lg font-semibold">{aqiStyles.verdict}</p>
      </div>

      <div className="mb-4">
        <div className="flex items-center mb-4">
          <img
            src={getWeatherImage(weatherData.precipitation)}
            alt="Weather"
            className="w-16 h-16 mr-4"
          />
          <div>
            <p className="text-2xl font-bold">{weatherData.temperature}¬∞C</p>
            <p className="text-sm text-gray-600">–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {weatherData.feels_like}¬∞C</p>
          </div>
        </div>

        <div className="flex justify-center space-x-4">
          <div className="flex items-center">
            <img src={wind} alt="Wind" className="w-6 h-6 mr-2" />
            <p>{weatherData.wind_speed} –º/—Å</p>
          </div>
          <div className="flex items-center">
            <img src={humidity} alt="Humidity" className="w-6 h-6 mr-2" />
            <p>{weatherData.humidity}%</p>
          </div>
          <div className="flex items-center">
            <img src={pressure} alt="Pressure" className="w-6 h-6 mr-2" />
            <p>{weatherData.pressure} –≥–ü–∞</p>
          </div>
        </div>
      </div>

      <div className="border-t border-gray-200 mb-4"></div>

      {!isExpanded && (
        <button
          className="w-full bg-[#19185E] text-white py-2 px-4 rounded-lg hover:bg-blue-600 transition-colors"
          onClick={() => setIsExpanded(true)}
        >
          –ü–æ–¥—Ä–æ–±–Ω–µ–µ
        </button>
      )}

      {isExpanded && (
        <>
          <div className="mb-4">
            {pollutants.map((pollutant, index) => (
              <div
                key={index}
                className={`mb-2 p-2 ${pollutant.value > pollutant.standard ? 'bg-red-100' : 'bg-gray-100'} rounded-lg`}
              >
                <p className="text-sm font-semibold">{pollutant.name} ({pollutant.description})</p>
                <p className="text-sm"> {pollutant.value} ¬µg/m¬≥</p>
              </div>
            ))}
          </div>

          <div className="mb-4">
            <p className="text-sm font-semibold">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</p>
            <p className="text-sm">{recommendations[airQualityData.aqi]}</p>
          </div>

          <button
            className="w-full bg-gray-500 text-white py-2 px-4 rounded-lg hover:bg-gray-600 transition-colors"
            onClick={() => setIsExpanded(false)}
          >
            –°–∫—Ä—ã—Ç—å
          </button>
        </>
      )}
    </aside>
  );
};

export default Sidebar;